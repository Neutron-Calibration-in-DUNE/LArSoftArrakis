#include "Arrakis.fcl"
#include "simulationservices_dune.fcl"
#include "services_dune.fcl"
#include "services_refactored_pdune.fcl"
#include "geometry_dune.fcl"
#include "tools_dune.fcl"

process_name: protodunearrakis

services:
{
    # Load the service that manages root files for histograms.
    TFileService:             { fileName: "protodune_arrakis.root" }
    TimeTracker:              @local::dune_time_tracker
    MemoryTracker:            @local::dune_memory_tracker
    RandomNumberGenerator:    {} #ART native random number generator
    FileCatalogMetadata:      @local::art_file_catalog_mc
    @table::protodune_larg4_services
    @table::protodune_refactored_simulation_services 
    Geometry:                 @local::protodunev7_ddg_geo
    IFDH: {}
}

#Start each new event with an empty event.
source:
{
    module_type: EmptyEvent
    timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
    maxEvents:   10
    firstRun:    1           # Run number to use for this file
    firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
    analyzers:
    {
        ana: @local::Arrakis
    }
    analysis:  
    [ 
        ana 
    ]

    end_paths:      [ analysis ]
}

outputs:
{
    out1:
    {
        module_type:        RootOutput
        fileName:           "protodune_arrakis.root"
        dataTier:           "detector-simulated"
        compressionLevel:   1
        fastCloning:        true
        outputCommands:     [ "keep *" ]
    }
}