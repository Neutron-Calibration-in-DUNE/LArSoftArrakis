#include "simulationservices_dune.fcl"
#include "services_dune.fcl"
#include "services_refactored_pdune.fcl"
#include "singles_dune.fcl"
#include "textfilegen.fcl"
#include "corsika_protodune.fcl"
#include "dune_radiological_model.fcl"
#include "geometry_dune.fcl"
#include "tools_dune.fcl"

process_name: protodunegen

services:
{
    # Load the service that manages root files for histograms.
    TFileService:             { fileName: "protodune_gen.root" }
    TimeTracker:              @local::dune_time_tracker
    MemoryTracker:            @local::dune_memory_tracker
    RandomNumberGenerator:    {} #ART native random number generator
    FileCatalogMetadata:      @local::art_file_catalog_mc
    @table::protodune_larg4_services
    @table::protodune_refactored_simulation_services 
    Geometry:                 @local::protodunev7_ddg_geo
    IFDH: {}
}

#Start each new event with an empty event.
source:
{
    module_type: EmptyEvent
    timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
    maxEvents:   10
    firstRun:    1           # Run number to use for this file
    firstEvent:  1           # number of first event in the file
}

# Generators for ProtoDUNE include the radiologicals; 
# Ar39, Ar42, Kr85 and Rn222, as well as Cosmics from 
# CORSIKA and the PNS system (as well as any HEPevt).
physics:
{
    producers:
    {
        Ar39:           @local::protodunesp_39ar
        Ar42:           @local::protodunesp_42ar
        Kr85:           @local::protodunesp_85kr
        Rn222:          @local::protodunesp_222rn
        Cosmics:        @local::protodune_corsika_cmc
        HEPevt:         @local::standard_textfilegen
        PNS:            @local::standard_textfilegen
        rns:            { module_type: "RandomNumberSaver" }
    }
    simulate: 
    [
        Ar39,
        Ar42,
        Kr85,
        Rn222,
        Cosmics,
        HEPevt,
        PNS, 
        rns
    ]

    analysis:  
    [ 
        ana 
    ]
 
    stream1:  [ out1 ]
    trigger_paths:  [simulate]
    end_paths:      [stream1] 
}

outputs:
{
    out1:
    {
        module_type:        RootOutput
        fileName:           "protodune_gen.root"
        dataTier:           "detector-simulated"
        compressionLevel:   1
        fastCloning:        true
        outputCommands:     [ "keep *" ]
    }
}

physics.producers.HEPevt.InputFileName:     ""
physics.producers.HEPevt.maxEvents:         1
physics.producers.PNS.InputFileName:        ""
physics.producers.PNS.maxEvents:            10